---
# 11.1.0
Language: Cpp
Standard: Auto

# identation
AccessModifierOffset: -2
UseTab: Never
ColumnLimit: 120
IndentWidth: 2
CommentPragmas: '^!'
IndentPPDirectives: AfterHash
IndentWrappedFunctionNames: true
NamespaceIndentation: All
IndentCaseLabels: false

# breaks
AlignOperands: true
AlwaysBreakTemplateDeclarations: Yes
AlwaysBreakBeforeMultilineStrings: true
AllowShortBlocksOnASingleLine: false
AllowShortCaseLabelsOnASingleLine: false
AllowShortFunctionsOnASingleLine: Empty
AllowShortIfStatementsOnASingleLine: false
AllowShortLoopsOnASingleLine: false
BreakBeforeBinaryOperators: NonAssignment
BreakBeforeTernaryOperators: true
PenaltyBreakAssignment: 10

# ctors
BreakConstructorInitializers: BeforeComma
ConstructorInitializerIndentWidth: 2
BreakInheritanceList: BeforeComma

# braces
BreakBeforeBraces: Custom
BraceWrapping:
  AfterCaseLabel: true
  AfterClass: true
  AfterControlStatement: Always
  AfterEnum: true
  AfterFunction: true
  AfterNamespace: true
  AfterStruct: true
  AfterExternBlock: true
  BeforeCatch: true
  BeforeElse: true
  IndentBraces: false
  SplitEmptyFunction: false
  SplitEmptyRecord: false
  SplitEmptyNamespace: false

# spaces
PointerAlignment: Left
SpaceAfterTemplateKeyword: false
SpacesBeforeTrailingComments: 2
SpaceBeforeInheritanceColon: true
SpaceBeforeAssignmentOperators: true
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeParens: ControlStatements
SpaceBeforeRangeBasedForLoopColon: true

# other
SortUsingDeclarations: false
FixNamespaceComments: true

# includes structure:
#  optinal main include, may be local (use full path if possible)
#  local includes (avoid if possible)
#  includes from private libraries or impl includes from libraries (TODO: cleanup)
#  includes from public libraries
#  common includes (TODO: cleanup)
#  third-party libraries
#  qt/boost includes
#  system includes
#  std includes
CommentPragmas: '^ IWYU pragma:'
SortIncludes: true
IncludeBlocks: Regroup
IncludeIsMainRegex: '$'
IncludeCategories:
  # qt/boost
  - Regex: '<(Qt|boost/).+>'
    Priority: 6
  # third-party includes
  - Regex: '"3rdparty/.+"'
    Priority: 5
  # common includes
  - Regex: '"(api_dynamic|byteorder|contract|error|error_tools|lazy|make_ptr|pointers|source_location|static_string|string_type|string_view|types)\.h"'
    Priority: 4
  # public libraries
  - Regex: '"(analysis|async|binary(/compression)?|core|debug|devices|formats|io|l10n|math|module|parameters|platform(/(application|version))?|resource|sound|strings|time|tools)/[^/]+\.h"'
    Priority: 3
  # private libraries/impl includes
  - Regex: '"(analysis|async|binary|core|debug|devices|formats|io|l10n|math|module|parameters|platform|resource|sound|strings|time|tools)/[^.]+\.h|zxtune.h"'
    Priority: 2
  # local includes or local libraries
  - Regex: '".+\.h"'
    Priority: 1
  # std includes
  - Regex: '<[_a-z0-9]+>'
    Priority: 8
  # system includes
  - Regex: '<[/_a-z0-9]+\.h>'
    Priority: 7
