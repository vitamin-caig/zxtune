apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.devtools.ksp'

android {
    compileSdk 34
    buildToolsVersion = '34.0.0'
    namespace 'app.zxtune'

    defaultConfig {
        applicationId "app.zxtune"
        targetSdkVersion 34
        //supported languages
        resourceConfigurations += ['en', 'de', 'ru', 'es', 'cs', 'zh', 'ja', 'pt']
        //supported densities for vector drawables rasterization
        vectorDrawables.generatedDensities  "mdpi", "hdpi", "xhdpi", "xxhdpi"

        // Disable till http://github.com/google/ksp/issues/861 resolved to avoid parallel builds conflict
        /*ksp {
            arg('room.schemaLocation', "${project.buildDir}/schemas")
        }*/
    }

    buildFeatures {
        renderScript false
        shaders false
        dataBinding true
        aidl true
        buildConfig true
    }

    packagingOptions {
        resources {
            excludes += [
                'META-INF/*.version',
                //jsoup
                'META-INF/CHANGES', 'META-INF/*.md',
                //kotlin
                '**/*.kotlin_*', 'DebugProbesKt.bin', 'kotlin-tooling-metadata.json'
            ]
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }
}

configurations {
    developImplementation {}
    stagingImplementation {}
}

dependencies {
    //noinspection GradleDependency minsdk=21
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    //noinspection GradleDependency minsdk=21
    implementation "androidx.appcompat:appcompat-resources:$appcompat_version"
    //noinspection GradleDependency minsdk=19
    implementation "androidx.media:media:$media_version"
    implementation 'androidx.annotation:annotation:1.9.1'
    //noinspection GradleDependency minsdk=19
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    //noinspection GradleDependency minsdk=19
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    //noinspection GradleDependency minsdk=21
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    //noinspection GradleDependency minsdk=21
    implementation 'androidx.recyclerview:recyclerview-selection:1.1.0'
    //noinspection GradleDependency minsdk=19
    implementation 'androidx.core:core-animation:1.0.0-beta01'
    implementation 'org.jsoup:jsoup:1.13.1'
    implementation 'com.github.anrwatchdog:anrwatchdog:1.4.0'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    //noinspection GradleDependency minsdk=19
    implementation "androidx.room:room-runtime:$room_version"
    ksp "androidx.room:room-compiler:$room_version"
    implementation 'androidx.preference:preference-ktx:1.2.1'
    //noinspection GradleDependency minsdk=21
    implementation 'androidx.documentfile:documentfile:1.0.1'
    //noinspection GradleDependency minsdk=21
    implementation 'androidx.startup:startup-runtime:1.1.1'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    //noinspection GradleDependency minsdk=21
    implementation 'androidx.tracing:tracing-ktx:1.2.0'
    implementation 'com.google.android.flexbox:flexbox:3.0.0'

    developImplementation 'com.squareup.leakcanary:leakcanary-android:2.14'
}

apply from: "${treeRoot}/make/android/android.gradle"
apply from: "${treeRoot}/make/android/nativelibs.gradle"

// Testing related
android {
    defaultConfig {
        testApplicationId "app.zxtune.test"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    testOptions.unitTests.includeAndroidResources = true
}

dependencies {
    androidTestImplementation "junit:junit:$junit_version"
    //noinspection GradleDependency minsdk19 since 1.6.0
    androidTestImplementation 'androidx.test:runner:1.5.2'
    //noinspection GradleDependency minsdk19 since 1.2.0
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'org.mockito:mockito-android:2.24.0'
    androidTestImplementation "org.mockito.kotlin:mockito-kotlin:$mockito_version"
    testImplementation "junit:junit:$junit_version"
    testImplementation 'org.robolectric:robolectric:4.12.2'
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockito_version"
    testImplementation 'androidx.test:core-ktx:1.6.1'
    testImplementation 'androidx.arch.core:core-testing:2.2.0'
    // See https://developer.android.com/guide/fragments/test#configure
    //noinspection GradleDependency minsdk=19
    testImplementation "androidx.fragment:fragment-testing:$fragment_version"
    // Run fragment tests under Develop flavor to avoid
    // https://github.com/robolectric/robolectric/pull/4736 problem
    //noinspection FragmentGradleConfiguration
    developImplementation "androidx.fragment:fragment-testing-manifest:$fragment_version"
    kspTest "androidx.room:room-compiler:$room_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
}

android {
    defaultConfig {
        def modarchiveKey = localProperties.getProperty("key.modarchive", "")
        buildConfigField("String", "MODARCHIVE_KEY", "\"${modarchiveKey}\"")

        def cdnRoot = localProperties.getProperty('cdn.root')
        if (cdnRoot != null) {
            buildConfigField("String", "CDN_ROOT", "\"${cdnRoot}\"")
        }
        def apiRoot = localProperties.getProperty('api.root')
        if (apiRoot != null) {
            buildConfigField("String", "API_ROOT", "\"${apiRoot}\"")
        }
        def proxyRoot = localProperties.getProperty('proxy.root')
        if (proxyRoot != null) {
            buildConfigField("String", "PROXY_ROOT", "\"${proxyRoot}\"")
        }
        buildConfigField("int", "VERSION_CODE", "0")
    }

    buildTypes {
        release {
            proguardFiles 'proguard-rules.pro'
        }
        develop {
            proguardFiles 'proguard-rules.pro'
        }
    }
}
